setwd("E:/FLESH_ContinuousBodilyEffort/03_TS_processing")
#audio_orig <- paste0(project_folder, "/Audio/")
processed_folder <- paste0(project_folder, "/TS_acoustics/")
#audio_orig <- paste0(project_folder, "/Audio/")
processed_folder <- paste0(curfolder, "/TS_acoustics/")
# get current working directory
curfolder   <- dirname(getwd())
#project_folder <- paste0(curfolder, "/TS_processing/")
audio_orig <- "/../01_XDF_processing/data/Data_processed/Data_trials/Audio_48/"
#audio_orig <- paste0(project_folder, "/Audio/")
processed_folder <- paste0(curfolder, "/TS_acoustics/")
# sanity check
#print(curfolder)
# packages
library(soundgen) # sound analysis
library(readr)    # data wrangling
library(tidyr)
library(dplyr)
library(umap) # umap
library(ggplot2) # plotting
library(viridis) # plotting
library(ggforce) #
library(plotly) # interactive plots
# List all .wav files in the folder and its subdirectories
wav_files <- list.files(audio_orig,
pattern = "\\.wav$",
full.names = TRUE,
recursive = TRUE)
register_path <- file.path(project_folder, 'SpeakerRegister.txt')
# packages
library(soundgen) # sound analysis
library(readr)    # data wrangling
library(tidyr)
library(dplyr)
library(umap) # umap
library(ggplot2) # plotting
library(viridis) # plotting
library(ggforce) #
library(plotly) # interactive plots
# get current working directory
curfolder   <- dirname(getwd())
audio_orig <- "../01_XDF_processing/data/Data_processed/Data_trials/Audio_48/"
processed_folder <- paste0(curfolder, "/TS_acoustics/")
# sanity check
#print(curfolder)
# List all .wav files in the folder and its subdirectories
wav_files <- list.files(audio_orig,
pattern = "\\.wav$",
full.names = TRUE,
recursive = TRUE)
register_path <- file.path(project_folder, 'SpeakerRegister.txt')
# This function extracts summary features from the analyze output
extract_features <- function(file, analyze_result) {
features <- analyze_result$detailed
# Add the filename as the first column
df_features <- cbind(File = file, features)
return(df_features)
}
# Loop over the .wav files in the directory and extract summary features
for (file in wav_files) {
print(paste("Analyzing file:", file))
tryCatch({
# Read and analyze the audio file
features <- analyze(file, windowLength = 20, step=10, pitchCeiling = 1000)
# Extract features
features_df <- extract_features(file, features)
# Extract the base filename without the extension and path
base_filename <- tools::file_path_sans_ext(basename(file))
# Remove the specific substring from the base filename
cleaned_filename <- gsub("Mic_nominal_srate48000_|pr_|trial_", "", base_filename)
# Create the full path for the output CSV file, with 'soundgen_' prefix
csv_filename <- paste0(processed_folder, "/soundgen_", cleaned_filename, ".csv")
# Write the features to a CSV file
write.csv(features_df, csv_filename, row.names = FALSE)
print(paste("Saved features to:", csv_filename))
}, warning = function(w) {
print(paste("Warning while processing file:", file))
print(w)
}, error = function(e) {
print(paste("Error while processing file:", file))
print(e)
})
}
dirname(getwd())
# packages
library(soundgen) # sound analysis
library(readr)    # data wrangling
library(tidyr)
library(dplyr)
library(umap) # umap
library(ggplot2) # plotting
library(viridis) # plotting
library(ggforce) #
library(plotly) # interactive plots
# get current working directory
curfolder   <- dirname(getwd())
audio_orig <- "../01_XDF_processing/data/Data_processed/Data_trials/Audio_48/"
processed_folder <- paste0(curfolder, "/03_TS_processing/TS_acoustics/")
# sanity check
#print(curfolder)
# list all .wav files in the folder and its subdirectories
wav_files <- list.files(audio_orig,
pattern = "\\.wav$",
full.names = TRUE,
recursive = TRUE)
# list all .wav files in the folder and its subdirectories
wav_files <- list.files(audio_orig,
pattern = "\\.wav$",
full.names = TRUE,
recursive = TRUE)
# This function extracts summary features from the analyze output
extract_features <- function(file, analyze_result) {
features <- analyze_result$detailed
# Add the filename as the first column
df_features <- cbind(File = file, features)
return(df_features)
}
# Loop over the .wav files in the directory and extract summary features
for (file in wav_files) {
print(paste("Analyzing file:", file))
tryCatch({
# Read and analyze the audio file
features <- analyze(file, windowLength = 20, step=10, pitchCeiling = 1000)
# Extract features
features_df <- extract_features(file, features)
# Extract the base filename without the extension and path
base_filename <- tools::file_path_sans_ext(basename(file))
# Remove the specific substring from the base filename
cleaned_filename <- gsub("Mic_nominal_srate48000_|pr_|trial_", "", base_filename)
# Create the full path for the output CSV file, with 'soundgen_' prefix
csv_filename <- paste0(processed_folder, "/soundgen_", cleaned_filename, ".csv")
# Write the features to a CSV file
write.csv(features_df, csv_filename, row.names = FALSE)
print(paste("Saved features to:", csv_filename))
}, warning = function(w) {
print(paste("Warning while processing file:", file))
print(w)
}, error = function(e) {
print(paste("Error while processing file:", file))
print(e)
})
}
